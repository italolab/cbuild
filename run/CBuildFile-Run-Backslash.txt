compiler=g++

IFWIN32
    output.file.name=cbuild.exe
ENDIF

IFNOWIN32
    output.file.name=cbuild
ENDIF

src.dir=..\src
test.dir=..\test
build.dir=build

build.files=

$debug_bin_dir=bin\Debug
$debug_obj_dir=obj\Debug
$debug_compiler_params=-Wall -fexceptions -g -std=c++17
$debug_linker_params=

$release_bin_dir=bin\Release
$release_obj_dir=obj\Release
$release_compiler_params=-Wall -fexceptions -O2 -std=c++17
$release_linker_params=-s -static

bin.dir=$($(target)_bin_dir)
obj.dir=$($(target)_obj_dir)
compiler.params=$($(target)_compiler_params)
linker.params=$($(target)_linker_params)

lib.dirs=
include.dirs=
libs=
#defines=

IFNOWIN32
    test.linker.params=-ldl -rdynamic
ENDIF

test.include.dirs=..\include
test.libs=cbtest

IFWIN32
    test.lib.dirs=..\lib\windows
ENDIF
IFNOWIN32
    test.lib.dirs=..\lib\linux
ENDIF

$project_name=cbuild

task copy showoutput;
task compile noverbose;

proc echo123
    echo 123
endproc

task compile after
    echo 000
    call echo123
    echo 456
endtask

task copy after
    echo Copia...
    call echo123

    @echo "abc"
    shellbegin
        IFWIN32
            if exist CBuildFile-Run (
                echo O arquivo existe!
            ) else (
                echo O arquivo nao existe.
            )
        ENDIF
        IFNOWIN32
            if [ -f "CBuildFile-Run" ]; then
                echo "O arquivo existe...!"
            else 
                echo "Arquivo nao existe: CBuildFile-Run.txt"
            fi
        ENDIF
    endshell

endtask

task debug before
    @dir
    echo Debug executado!
endtask

task finish after

    IFWIN32
        $lib_dir=$(working_dir)\..\lib\windows
    ENDIF
    IFNOWIN32
        $lib_dir=$(working_dir)\..\lib\linux
    ENDIF

    mkdir build\include

    cp -r $(src.dir)\**\io\*.h build\include
    cp $(src.dir)\*.cpp $(build.dir)
    mkdir $(build.dir)\objects
    cp $(obj.dir)\src\io\* $(build.dir)\objects

    cp $(lib_dir)\libcbtest.a $(build.dir)\libtest.a
    cp ..\include\test\cbtest.h $(build.dir)\cbtest.h
    cp ..\include\test\cbtest.h $(build.dir)\cbtest.h

    cp -r $(src.dir) $(build.dir)\source

    cp -r ..\..\cbtest\src\**\*.h build\include
    cp -r ..\..\cbtest\src\**\*.h build\include

    rm $(build.dir)\objects\io.o
    rm $(build.dir)\ma*n.*
    rm $(build.dir)\lib*.*

    rm -r $(build.dir)\include\io\i*.*
    rm -r $(bin.dir)
endtask